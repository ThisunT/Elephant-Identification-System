{"version":3,"sources":["../index.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;GAcG;AACH,qCAAqC;AAIrC,6CAA4C;AAE5C;;GAEG;AACH,IAAM,cAAc,GAAG,WAAW,CAAC;AAEnC,iBACE,GAA0B,EAC1B,MAAW,EACX,MAAe;IAEf,MAAM,CAAC,IAAI,iBAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAClC,CAAC;AAED,2BAAkC,QAAQ;IACxC,IAAI,gBAAgB,GAAG;QACrB,YAAY;QACZ,SAAS,EAAE,iBAAO;KACnB,CAAC;IACF,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAC/B,cAAc,EACd,OAAiC,EACjC,gBAAgB;IAChB,yCAAyC;IACzC,SAAS;IACT,8CAA8C;IAC9C,IAAI,CACL,CAAC;AACJ,CAAC;AAdD,8CAcC;AAED,iBAAiB,CAAC,aAAQ,CAAC,CAAC","file":"index.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport firebase from '@firebase/app';\nimport * as app_types from '@firebase/app-types';\nimport { FirebaseServiceFactory } from '@firebase/app-types/private';\nimport * as types from '@firebase/functions-types';\nimport { Service } from './src/api/service';\n\n/**\n * Type constant for Firebase Functions.\n */\nconst FUNCTIONS_TYPE = 'functions';\n\nfunction factory(\n  app: app_types.FirebaseApp,\n  unused: any,\n  region?: string\n): Service {\n  return new Service(app, region);\n}\n\nexport function registerFunctions(instance) {\n  let namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n  instance.INTERNAL.registerService(\n    FUNCTIONS_TYPE,\n    factory as FirebaseServiceFactory,\n    namespaceExports,\n    // We don't need to wait on any AppHooks.\n    undefined,\n    // Allow multiple functions instances per app.\n    true\n  );\n}\n\nregisterFunctions(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    functions?: {\n      (app?: FirebaseApp): types.FirebaseFunctions;\n      Functions: typeof types.FirebaseFunctions;\n    };\n  }\n  interface FirebaseApp {\n    functions?(): types.FirebaseFunctions;\n  }\n}\n"]}