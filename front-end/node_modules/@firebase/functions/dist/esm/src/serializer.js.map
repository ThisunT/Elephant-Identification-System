{"version":3,"sources":["../src/serializer.ts"],"names":[],"mappings":"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","file":"serializer.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(o: object, f: (any) => any): object {\n  let result = {};\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\nexport class Serializer {\n  // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n  encode(data: any): any {\n    if (data === null || data === undefined) {\n      return null;\n    }\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n    if (data === true || data === false) {\n      return data;\n    }\n    if (toString.call(data) === '[object String]') {\n      return data;\n    }\n    if (Array.isArray(data)) {\n      return data.map(x => this.encode(x));\n    }\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, x => this.encode(x));\n    }\n    // If we got this far, the data is not encodable.\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }\n\n  // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n  decode(json: any): any {\n    if (json === null) {\n      return json;\n    }\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE:\n        // Fall through and handle this the same as unsigned.\n        case UNSIGNED_LONG_TYPE: {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          const value = parseFloat(json.value);\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n          return value;\n        }\n        default: {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n      }\n    }\n    if (Array.isArray(json)) {\n      return json.map(x => this.decode(x));\n    }\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, x => this.decode(x));\n    }\n    // Anything else is safe to return.\n    return json;\n  }\n}\n"]}